{"ast":null,"code":"var _jsxFileName = \"/Users/anshul.narwal/Desktop/Screenshots/projects/ChatAppUI/src/components/MessagePanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Message from './Message';\nimport { sendMessage } from './api';\nimport '../styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessagePanel({\n  messages,\n  sender,\n  currUser,\n  endpoint,\n  setMessages\n}) {\n  _s();\n  console.log(\"Data in MessagePanel:\", messages);\n  console.log(\"In MessagePanel  \", messages[sender]);\n  const [message, setMessage] = useState('');\n  const handleSendMessage = async () => {\n    try {\n      const data = await sendMessage(endpoint, currUser, sender, message);\n      if (data.status === 'success') {\n        setMessage('');\n        setMessages(prevMessages => ({\n          ...prevMessages,\n          [sender]: [...(prevMessages[sender] || []), {\n            \"sender\": currUser,\n            \"content\": message,\n            \"timestamp\": new Date().toLocaleString()\n          }]\n        }));\n      }\n    } catch (error) {\n      console.error('Failed to send message:', error);\n    }\n  };\n  if (!sender) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Please select a person to view messages.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Message\",\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: Array.isArray(messages[sender]) && messages[sender].map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n        sender: msg.sender,\n        msg: msg.content,\n        timestamp: msg.timestamp,\n        currUser: currUser\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(MessagePanel, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n_c = MessagePanel;\nexport default MessagePanel;\nvar _c;\n$RefreshReg$(_c, \"MessagePanel\");","map":{"version":3,"names":["React","useState","Message","sendMessage","jsxDEV","_jsxDEV","MessagePanel","messages","sender","currUser","endpoint","setMessages","_s","console","log","message","setMessage","handleSendMessage","data","status","prevMessages","Date","toLocaleString","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","e","target","onClick","Array","isArray","map","msg","index","content","timestamp","_c","$RefreshReg$"],"sources":["/Users/anshul.narwal/Desktop/Screenshots/projects/ChatAppUI/src/components/MessagePanel.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Message from './Message';\nimport { sendMessage } from './api';\nimport '../styles/App.css';\n\n\nfunction MessagePanel({ messages, sender, currUser, endpoint, setMessages }) {\n    console.log(\n\n        \"Data in MessagePanel:\", messages\n    )\n    console.log(\n        \"In MessagePanel  \", messages[sender]\n    )\n    const [message, setMessage] = useState('');\n\n    const handleSendMessage = async () => {\n        try {\n            const data = await sendMessage(endpoint, currUser, sender, message);\n            if (data.status === 'success') {\n                setMessage('');\n                setMessages(prevMessages => ({\n                    ...prevMessages,\n                    [sender]: [...(prevMessages[sender] || []), {\"sender\": currUser, \"content\": message, \"timestamp\": new Date().toLocaleString()}]\n                }));\n            }\n        } catch (error) {\n            console.error('Failed to send message:', error);\n        }\n    };\n\n    if (!sender) {\n        return <div>Please select a person to view messages.</div>;\n    }\n\n    return (\n        <div className=\"message-panel\">\n            <input\n                type=\"text\"\n                placeholder=\"Message\"\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n            />\n            <button onClick={handleSendMessage}>Send</button>\n            <div className=\"messages\">\n                {Array.isArray(messages[sender]) && messages[sender].map((msg, index) => \n                    <Message key={index} sender={msg.sender} msg={msg.content} timestamp={msg.timestamp} currUser={currUser} />\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default MessagePanel;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,WAAW,QAAQ,OAAO;AACnC,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3B,SAASC,YAAYA,CAAC;EAAEC,QAAQ;EAAEC,MAAM;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACzEC,OAAO,CAACC,GAAG,CAEP,uBAAuB,EAAEP,QAC7B,CAAC;EACDM,OAAO,CAACC,GAAG,CACP,mBAAmB,EAAEP,QAAQ,CAACC,MAAM,CACxC,CAAC;EACD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMgB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACA,MAAMC,IAAI,GAAG,MAAMf,WAAW,CAACO,QAAQ,EAAED,QAAQ,EAAED,MAAM,EAAEO,OAAO,CAAC;MACnE,IAAIG,IAAI,CAACC,MAAM,KAAK,SAAS,EAAE;QAC3BH,UAAU,CAAC,EAAE,CAAC;QACdL,WAAW,CAACS,YAAY,KAAK;UACzB,GAAGA,YAAY;UACf,CAACZ,MAAM,GAAG,CAAC,IAAIY,YAAY,CAACZ,MAAM,CAAC,IAAI,EAAE,CAAC,EAAE;YAAC,QAAQ,EAAEC,QAAQ;YAAE,SAAS,EAAEM,OAAO;YAAE,WAAW,EAAE,IAAIM,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC;UAAC,CAAC;QAClI,CAAC,CAAC,CAAC;MACP;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZV,OAAO,CAACU,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD;EACJ,CAAC;EAED,IAAI,CAACf,MAAM,EAAE;IACT,oBAAOH,OAAA;MAAAmB,QAAA,EAAK;IAAwC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9D;EAEA,oBACIvB,OAAA;IAAKwB,SAAS,EAAC,eAAe;IAAAL,QAAA,gBAC1BnB,OAAA;MACIyB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,SAAS;MACrBC,KAAK,EAAEjB,OAAQ;MACfkB,QAAQ,EAAGC,CAAC,IAAKlB,UAAU,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACFvB,OAAA;MAAQ+B,OAAO,EAAEnB,iBAAkB;MAAAO,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjDvB,OAAA;MAAKwB,SAAS,EAAC,UAAU;MAAAL,QAAA,EACpBa,KAAK,CAACC,OAAO,CAAC/B,QAAQ,CAACC,MAAM,CAAC,CAAC,IAAID,QAAQ,CAACC,MAAM,CAAC,CAAC+B,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAChEpC,OAAA,CAACH,OAAO;QAAaM,MAAM,EAAEgC,GAAG,CAAChC,MAAO;QAACgC,GAAG,EAAEA,GAAG,CAACE,OAAQ;QAACC,SAAS,EAAEH,GAAG,CAACG,SAAU;QAAClC,QAAQ,EAAEA;MAAS,GAA1FgC,KAAK;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuF,CAC9G;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAChB,EAAA,CA7CQN,YAAY;AAAAsC,EAAA,GAAZtC,YAAY;AA+CrB,eAAeA,YAAY;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}