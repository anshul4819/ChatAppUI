{"ast":null,"code":"var _jsxFileName = \"/Users/anshul.narwal/Desktop/Screenshots/projects/messenger-ui/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"http://localhost:3000\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [receiver, setReceiver] = useState('');\n  const [sender, setSender] = useState('');\n  useEffect(() => {\n    const socket = socketIOClient(ENDPOINT);\n    socket.on('connect', () => {\n      console.log('Connected to server');\n    });\n    socket.on('new_message', data => {\n      setMessages(prevMessages => [...prevMessages, data]);\n    });\n    return () => socket.disconnect();\n  }, []);\n  const sendMessage = async () => {\n    try {\n      const response = await fetch(`${ENDPOINT}/messages`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sender,\n          message,\n          receiver\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      if (data.status === 'success') {\n        setMessages([...messages, {\n          sender,\n          content: message\n        }]);\n      }\n    } catch (error) {\n      console.error('Failed to send message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Messaging App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Sender\",\n      value: sender,\n      onChange: e => setSender(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Receiver\",\n      value: receiver,\n      onChange: e => setReceiver(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Message\",\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), \" \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"fGRXiVb3eD+LmzCKodO8d2i6e90=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","socketIOClient","jsxDEV","_jsxDEV","ENDPOINT","App","_s","messages","setMessages","message","setMessage","receiver","setReceiver","sender","setSender","socket","on","console","log","data","prevMessages","disconnect","sendMessage","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","status","content","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","msg","index","_c","$RefreshReg$"],"sources":["/Users/anshul.narwal/Desktop/Screenshots/projects/messenger-ui/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport socketIOClient from 'socket.io-client';\n\nconst ENDPOINT = \"http://localhost:3000\";\n\nfunction App() {\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState('');\n    const [receiver, setReceiver] = useState('');\n    const [sender, setSender] = useState('');\n\n    useEffect(() => {\n        const socket = socketIOClient(ENDPOINT);\n\n        socket.on('connect', () => {\n            console.log('Connected to server');\n        });\n\n        socket.on('new_message', (data) => {\n            setMessages((prevMessages) => [...prevMessages, data]);\n        });\n\n        return () => socket.disconnect();\n    }, []);\n\n    const sendMessage = async () => {\n        try {\n            const response = await fetch(`${ENDPOINT}/messages`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ sender, message, receiver }),\n            });\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n    \n            const data = await response.json();\n            if (data.status === 'success') {\n                setMessages([...messages, { sender, content: message }]);\n            }\n        } catch (error) {\n            console.error('Failed to send message:', error);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Messaging App</h1>\n            <input\n                type=\"text\"\n                placeholder=\"Sender\"\n                value={sender}\n                onChange={(e) => setSender(e.target.value)}\n            />\n            <input\n                type=\"text\"\n                placeholder=\"Receiver\"\n                value={receiver}\n                onChange={(e) => setReceiver(e.target.value)}\n            />\n            <input\n                type=\"text\"\n                placeholder=\"Message\"\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n            />\n            <button onClick={sendMessage}>Send</button>\n            <div>\n                <h2>Messages</h2>\n                {messages.map((msg, index) => (\n                    <div key={index}>\n                        <strong>{msg.sender}:</strong> {msg.content}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}