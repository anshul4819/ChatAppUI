{"ast":null,"code":"var _jsxFileName = \"/Users/anshul.narwal/Desktop/Screenshots/projects/messenger-ui/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"http://localhost:3000\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [receiver, setReceiver] = useState('');\n  const [sender, setSender] = useState('');\n  const [isReceiverSet, setIsReceiverSet] = useState(false);\n  useEffect(() => {\n    if (isReceiverSet) {\n      const socket = socketIOClient(ENDPOINT);\n      socket.on('connect', () => {\n        console.log('Connected to server');\n        socket.emit('join', sender); // Emit using sender which represents current user\n      });\n      socket.on('new_message', data => {\n        setMessages(prevMessages => [...prevMessages, data]);\n      });\n      return () => socket.disconnect();\n    }\n  }, [isReceiverSet, sender]); // Change to sender here to ensure updates trigger appropriately\n\n  const handleSetReceiver = () => {\n    setSender(receiver); // This sets up the sender as the current user, seems to be a misnomer\n    setIsReceiverSet(true);\n  };\n  const sendMessage = async () => {\n    try {\n      const response = await fetch(`${ENDPOINT}/messages`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sender,\n          message,\n          receiver\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      if (data.status === 'success') {\n        setMessage('');\n      }\n    } catch (error) {\n      console.error('Failed to send message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Messaging App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), !isReceiverSet ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your name\",\n        value: receiver,\n        onChange: e => setReceiver(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSetReceiver,\n        children: \"Set Receiver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Sender\",\n        value: sender,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Message\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.sender, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }, this), \" \", msg.content]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"NlooOljZk8TfCMRbTklBkYuuAFg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","socketIOClient","jsxDEV","_jsxDEV","ENDPOINT","App","_s","messages","setMessages","message","setMessage","receiver","setReceiver","sender","setSender","isReceiverSet","setIsReceiverSet","socket","on","console","log","emit","data","prevMessages","disconnect","handleSetReceiver","sendMessage","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","status","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","readOnly","map","msg","index","content","_c","$RefreshReg$"],"sources":["/Users/anshul.narwal/Desktop/Screenshots/projects/messenger-ui/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport socketIOClient from 'socket.io-client';\n\nconst ENDPOINT = \"http://localhost:3000\";\n\nfunction App() {\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState('');\n    const [receiver, setReceiver] = useState('');\n    const [sender, setSender] = useState('');\n    const [isReceiverSet, setIsReceiverSet] = useState(false);\n\n    useEffect(() => {\n        if (isReceiverSet) {\n            const socket = socketIOClient(ENDPOINT);\n\n            socket.on('connect', () => {\n                console.log('Connected to server');\n                socket.emit('join', sender); // Emit using sender which represents current user\n            });\n\n            socket.on('new_message', (data) => {\n                setMessages((prevMessages) => [...prevMessages, data]);\n            });\n\n            return () => socket.disconnect();\n        }\n    }, [isReceiverSet, sender]); // Change to sender here to ensure updates trigger appropriately\n\n    const handleSetReceiver = () => {\n        setSender(receiver); // This sets up the sender as the current user, seems to be a misnomer\n        setIsReceiverSet(true);\n    };\n\n    const sendMessage = async () => {\n        try {\n            const response = await fetch(`${ENDPOINT}/messages`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ sender, message, receiver }),\n            });\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n    \n            const data = await response.json();\n            if (data.status === 'success') {\n                setMessage('');\n            }\n        } catch (error) {\n            console.error('Failed to send message:', error);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Messaging App</h1>\n            {!isReceiverSet ? (\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter your name\"\n                        value={receiver}\n                        onChange={(e) => setReceiver(e.target.value)}\n                    />\n                    <button onClick={handleSetReceiver}>Set Receiver</button>\n                </div>\n            ) : (\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Sender\"\n                        value={sender}\n                        readOnly\n                    />\n                    <input\n                        type=\"text\"\n                        placeholder=\"Message\"\n                        value={message}\n                        onChange={(e) => setMessage(e.target.value)}\n                    />\n                    <button onClick={sendMessage}>Send</button>\n                    <div>\n                        <h2>Messages</h2>\n                        {messages.map((msg, index) => (\n                            <div key={index}>\n                                <strong>{msg.sender}:</strong> {msg.content}\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}