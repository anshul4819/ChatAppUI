{"ast":null,"code":"var _jsxFileName = \"/Users/anshul.narwal/Desktop/Screenshots/projects/messenger-ui/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { Message } from './Message';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"http://localhost:3000\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [receiver, setReceiver] = useState('');\n  const [currUser, setCurrUser] = useState('');\n  const [isCurrentUserSet, setIsCurrentUserSet] = useState(false);\n  useEffect(() => {\n    const socket = socketIOClient(ENDPOINT);\n    if (isCurrentUserSet) {\n      socket.on('connect', () => {\n        console.log('Connected to server');\n        socket.emit('join', currUser);\n      });\n      socket.on('new_message', data => {\n        setMessages(prevMessages => [...prevMessages, data]);\n      });\n    }\n    return () => {\n      if (isCurrentUserSet) {\n        socket.disconnect();\n      }\n    };\n  }, [isCurrentUserSet, currUser]);\n  const handleSetCurrentUser = () => {\n    setIsCurrentUserSet(true);\n  };\n  const sendMessage = async () => {\n    try {\n      const response = await fetch(`${ENDPOINT}/messages`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sender: currUser,\n          message,\n          receiver\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      if (data.status === 'success') {\n        setMessage('');\n      }\n    } catch (error) {\n      console.error('Failed to send message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Messaging App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), !isCurrentUserSet ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your name\",\n        value: currUser,\n        onChange: e => setCurrUser(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSetCurrentUser,\n        children: \"Set Current User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Send to\",\n        value: receiver,\n        onChange: e => setReceiver(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Message\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Messages broadcasted for \", currUser, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n          msg: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 55\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"kbEpNz7OYTAhvs9CDjzTiGlgu5Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","socketIOClient","Message","jsxDEV","_jsxDEV","ENDPOINT","App","_s","messages","setMessages","message","setMessage","receiver","setReceiver","currUser","setCurrUser","isCurrentUserSet","setIsCurrentUserSet","socket","on","console","log","emit","data","prevMessages","disconnect","handleSetCurrentUser","sendMessage","response","fetch","method","headers","body","JSON","stringify","sender","ok","Error","json","status","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","msg","index","_c","$RefreshReg$"],"sources":["/Users/anshul.narwal/Desktop/Screenshots/projects/messenger-ui/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { Message } from './Message';\nimport './styles/App.css';\n\nconst ENDPOINT = \"http://localhost:3000\";\n\nfunction App() {\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState('');\n    const [receiver, setReceiver] = useState('');\n    const [currUser, setCurrUser] = useState('');\n    const [isCurrentUserSet, setIsCurrentUserSet] = useState(false);\n\n    useEffect(() => {\n        const socket = socketIOClient(ENDPOINT);\n    \n        if (isCurrentUserSet) {\n            socket.on('connect', () => {\n                console.log('Connected to server');\n                socket.emit('join', currUser);  \n            });\n    \n            socket.on('new_message', (data) => {\n                setMessages(prevMessages => [...prevMessages, data]);\n            });\n        }\n    \n        return () => {\n            if (isCurrentUserSet) {\n                socket.disconnect();\n            }\n        };\n    }, [isCurrentUserSet, currUser]);\n\n    const handleSetCurrentUser = () => {\n        setIsCurrentUserSet(true);\n    };\n\n    const sendMessage = async () => {\n        try {\n            const response = await fetch(`${ENDPOINT}/messages`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ sender: currUser, message, receiver }),\n            });\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n    \n            const data = await response.json();\n            if (data.status === 'success') {\n                setMessage('');\n            }\n        } catch (error) {\n            console.error('Failed to send message:', error);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Messaging App</h1>\n            {!isCurrentUserSet ? (\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter your name\"\n                        value={currUser}\n                        onChange={(e) => setCurrUser(e.target.value)}\n                    />\n                    <button onClick={handleSetCurrentUser}>Set Current User</button>\n                </div>\n            ) : (\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Send to\"\n                        value={receiver}\n                        onChange={(e) => setReceiver(e.target.value)}\n                    />\n                    <input\n                        type=\"text\"\n                        placeholder=\"Message\"\n                        value={message}\n                        onChange={(e) => setMessage(e.target.value)}\n                    />\n                    <button onClick={sendMessage}>Send</button>\n                    <div className=\"messages\">\n                        <h2>Messages broadcasted for {currUser}:</h2>\n                        {messages.map((msg, index) => <Message key={index} msg={msg} />)}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}